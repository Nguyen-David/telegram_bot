import telebot
from config import Screen, bot, markdown
from menu import menu, inline_menu
from dialog import dialog
import db_users

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∑–∞–∫–∞–∑–∞ —É—Å–ª—É–≥–∏
keyboard_service_order = telebot.types.ReplyKeyboardMarkup(True)
keyboard_service_order.row('–ó–∞–º–æ–≤–∏—Ç–∏ –ø–æ—Å–ª—É–≥—É')
keyboard_service_order.row('‚¨ÖÔ∏è–ù–∞–∑–∞–¥')


@bot.message_handler(commands=['start'])
def start_message(message):
        db_users.add_user(message)
        print(message)
        mass = list(menu.keys())
        screen_item = Screen(bot, message)
        screen_item.get_first_screen(mass, first_screen, False, '–ü–æ—á–∞—Ç–∏')


@bot.message_handler(content_types=['text', 'contact', 'audio', 'document', 'photo', 'sticker',
                                    'video', 'video_note', 'voice', 'location', 'new_chat_members',
                                    'left_chat_member', 'new_chat_title', 'new_chat_photo', 'delete_chat_photo',
                                    'group_chat_created', 'supergroup_chat_created', 'channel_chat_created',
                                    'migrate_to_chat_id', 'migrate_from_chat_id', 'pinned_message'])
def first_screen(message):
        screen_item = Screen(bot, message)
        try:
            if message.text.lower() == '–ø—Ä–æ gigagroup':
                mass = list(menu['–ü–†–û GIGAGROUP'])
                screen_item.get_current_screen(mass, about_gigagroup, True)
            elif message.text.lower() == '—Ç–æ–ø-–ø–æ—Å–ª—É–≥–∏ üèÜ':
                mass = list(menu['–¢–û–ü-–ü–û–°–õ–£–ì–ò üèÜ'])
                screen_item.get_current_screen(mass, top_service, True)
            elif message.text.lower() == '–ø—ñ–¥–∫–ª—é—á–∏—Ç–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ ‚úçÔ∏è':
                screen_item.get_add_manager_screen(add_manager)
            elif message.text.lower() == 'üì© –∫–æ–Ω—Ç–∞–∫—Ç–∏ üìû':
                screen_item.get_recursive_screen(first_screen)
            elif message.text.lower() == '–Ω–∞–π–ø–æ–ø—É–ª—è—Ä–Ω—ñ—à—ñ –ø–∏—Ç–∞–Ω–Ω—è':
                mass = list(menu['–ù–ê–ô–ü–û–ü–£–õ–Ø–†–ù–Ü–®–Ü –ü–ò–¢–ê–ù–ù–Ø'])
                screen_item.get_current_screen(mass, top_question, True)
            elif message.text.lower() == '–∫–∞—Ä\'—î—Ä–∞':
                screen_item.get_recursive_screen(first_screen)
            elif message.text.lower() == '–ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –ø–∏—Ç–∞–Ω—å':
                mass = list(menu['–ù–ê–ô–ü–û–ü–£–õ–Ø–†–ù–Ü–®–Ü –ü–ò–¢–ê–ù–ù–Ø'])
                screen_item.get_previous_screen(mass, top_question, True, '–ù–ê–ô–ü–û–ü–£–õ–Ø–†–ù–Ü–®–Ü –ü–ò–¢–ê–ù–ù–Ø')
            else:
                mass = list(menu.keys())
                screen_item.get_first_screen(mass, first_screen, False, '–û–®–ò–ë–ö–ê')
            print(message.text)
        except Exception:
            print('–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞')
            mass = list(menu.keys())
            screen_item.get_first_screen(mass, first_screen, False, '–û–®–ò–ë–ö–ê')


def about_gigagroup(message):
        screen_item = Screen(bot, message)
        try:
            if message.text.lower() == 'gigatrans':
                mass = list(menu['–ü–†–û GIGAGROUP']['GIGATRANS'])
                screen_item.get_current_screen(mass, about_gigatrans, True)
            elif message.text.lower() == 'gigacenter':
                mass = list(menu['–ü–†–û GIGAGROUP']['GIGACENTER'])
                screen_item.get_current_screen(mass, about_gigacenter, True)
            elif message.text.lower() == 'gigacloud':
                mass = list(menu['–ü–†–û GIGAGROUP']['GIGACLOUD'])
                screen_item.get_current_screen(mass, about_gigacloud, True)
            elif message.text.lower() == 'gigasafe':
                mass = list(menu['–ü–†–û GIGAGROUP']['GIGASAFE'])
                screen_item.get_current_screen(mass, about_gigasafe, True)
            elif message.text.lower() == '–ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –ø–∏—Ç–∞–Ω—å':
                mass = list(menu['–ù–ê–ô–ü–û–ü–£–õ–Ø–†–ù–Ü–®–Ü –ü–ò–¢–ê–ù–ù–Ø'])
                screen_item.get_previous_screen(mass, top_question, True, '–ù–ê–ô–ü–û–ü–£–õ–Ø–†–ù–Ü–®–Ü –ü–ò–¢–ê–ù–ù–Ø')
            elif message.text.lower() == '‚¨ÖÔ∏è–Ω–∞–∑–∞–¥':
                mass = list(menu.keys())
                screen_item.get_previous_screen(mass, first_screen, False, '–ü–æ—á–∞—Ç–∏')
            else:
                screen_item.get_error_screen(about_gigagroup)

            print(message.text)
        except Exception:
            print('–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞')
            mass = list(menu.keys())
            screen_item.get_first_screen(mass, first_screen, False, '–û–®–ò–ë–ö–ê')


def about_gigatrans(message):
    screen_item = Screen(bot, message)

    try:
        if message.text.lower() == '–ø–æ—Å–ª—É–≥–∏':
            mass = list(menu['–ü–†–û GIGAGROUP']['GIGATRANS']['–ü–û–°–õ–£–ì–ò'])
            screen_item.get_current_screen(mass, service_gigatrans, True)
        elif message.text.lower() == '—á–æ–º—É –Ω–∞—Å –æ–±–∏—Ä–∞—é—Ç—å':
            msg = bot.send_message(message.chat.id, dialog['–ß–û–ú–£ –ù–ê–° –û–ë–ò–†–ê–Æ–¢–¨ GIGATRANS'], parse_mode="Markdown")
            bot.register_next_step_handler(msg, about_gigatrans)
        elif message.text.lower() == '–ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –ø–∏—Ç–∞–Ω—å':
            mass = list(menu['–ù–ê–ô–ü–û–ü–£–õ–Ø–†–ù–Ü–®–Ü –ü–ò–¢–ê–ù–ù–Ø'])
            screen_item.get_previous_screen(mass, top_question, True, '–ù–ê–ô–ü–û–ü–£–õ–Ø–†–ù–Ü–®–Ü –ü–ò–¢–ê–ù–ù–Ø')
        elif message.text.lower() == '‚¨ÖÔ∏è–Ω–∞–∑–∞–¥':
            mass = list(menu['–ü–†–û GIGAGROUP'])
            screen_item.get_previous_screen(mass, about_gigagroup, True, '–ü–†–û GIGAGROUP')
        else:
            screen_item.get_error_screen(about_gigatrans)
        print(message.text)
    except Exception:
        print('–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞')
        mass = list(menu.keys())
        screen_item.get_first_screen(mass, first_screen, False, '–û–®–ò–ë–ö–ê')


def service_gigatrans(message):
    screen_item = Screen(bot, message)

    try:
        if message.text.lower() == '—ñ–Ω—Ç–µ—Ä–Ω–µ—Ç –¥–ª—è –±—ñ–∑–Ω–µ—Å—É':
            msg = bot.send_message(message.chat.id, dialog['–Ü–ù–¢–ï–†–ù–ï–¢ –î–õ–Ø –ë–Ü–ó–ù–ï–°–£'], reply_markup=keyboard_service_order, parse_mode="Markdown")
            bot.register_next_step_handler(msg, service_order, 'GIGATRANS', '–Ü–ù–¢–ï–†–ù–ï–¢ –î–õ–Ø –ë–Ü–ó–ù–ï–°–£')
        elif message.text.lower() == '–∫–∞–Ω–∞–ª–∏ –ø–µ—Ä–µ–¥–∞—á—ñ –¥–∞–Ω–∏—Ö':
            msg = bot.send_message(message.chat.id, dialog['–ö–ê–ù–ê–õ–ò –ü–ï–†–ï–î–ê–ß–Ü –î–ê–ù–ò–•'], reply_markup=keyboard_service_order,parse_mode="Markdown")
            bot.register_next_step_handler(msg, service_order, 'GIGATRANS', '–ö–ê–ù–ê–õ–ò –ü–ï–†–ï–î–ê–ß–Ü –î–ê–ù–ò–•')
        elif message.text.lower() == '—ñ—Ä-—Ç–µ–ª–µ—Ñ–æ–Ω—ñ—è —Ç–∞ –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–∞ –∞—Ç—Å':
            msg = bot.send_message(message.chat.id, dialog['–Ü–†-–¢–ï–õ–ï–§–û–ù–Ü–Ø –¢–ê –í–Ü–†–¢–£–ê–õ–¨–ù–ê –ê–¢–°'], reply_markup=keyboard_service_order,parse_mode="Markdown")
            bot.register_next_step_handler(msg, service_order, 'GIGATRANS', '–Ü–†-–¢–ï–õ–ï–§–û–ù–Ü–Ø –¢–ê –í–Ü–†–¢–£–ê–õ–¨–ù–ê –ê–¢–°')
        elif message.text.lower() == '–∑–∞—Ö–∏—Å—Ç –≤—ñ–¥ ddos-–∞—Ç–∞–∫':
            msg = bot.send_message(message.chat.id, dialog['–ó–ê–•–ò–°–¢ –í–Ü–î DDoS-–ê–¢–ê–ö'], reply_markup=keyboard_service_order,parse_mode="Markdown")
            bot.register_next_step_handler(msg, service_order, 'GIGATRANS', '–ó–ê–•–ò–°–¢ –í–Ü–î DDoS-–ê–¢–ê–ö')
        elif message.text.lower() == '–º—ñ–∂–æ–ø–µ—Ä–∞—Ç–æ—Ä—Å—å–∫–∏–π –±—ñ–∑–Ω–µ—Å':
            msg = bot.send_message(message.chat.id, dialog['–ú–Ü–ñ–û–ü–ï–†–ê–¢–û–†–°–¨–ö–ò–ô –ë–Ü–ó–ù–ï–°'], reply_markup=keyboard_service_order,parse_mode="Markdown")
            bot.register_next_step_handler(msg, service_order, 'GIGATRANS', '–ó–ê–•–ò–°–¢ –í–Ü–î DDoS-–ê–¢–ê–ö')
        elif message.text.lower() == '–±—É–¥—ñ–≤–Ω–∏—Ü—Ç–≤–æ –≤–æ–ª–∑':
            msg = bot.send_message(message.chat.id, dialog['–ë–£–î–Ü–í–ù–ò–¶–¢–í–û –í–û–õ–ó'], reply_markup=keyboard_service_order, parse_mode="Markdown")
            bot.register_next_step_handler(msg, service_order, 'GIGATRANS', '–ë–£–î–Ü–í–ù–ò–¶–¢–í–û –í–û–õ–ó')
        elif message.text.lower() == '‚¨ÖÔ∏è–Ω–∞–∑–∞–¥':
            mass = list(menu['–ü–†–û GIGAGROUP']['GIGATRANS'])
            screen_item.get_previous_screen(mass, about_gigatrans, True, 'GIGATRANS')
        else:
            screen_item.get_error_screen(service_gigatrans)
    except Exception:
        print('–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞')
        mass = list(menu.keys())
        screen_item.get_first_screen(mass, first_screen, False, '–û–®–ò–ë–ö–ê')


def about_gigacenter(message):
    screen_item = Screen(bot, message)

    try:
        if message.text.lower() == '–ø–æ—Å–ª—É–≥–∏':
            mass = list(menu['–ü–†–û GIGAGROUP']['GIGACENTER']['–ü–û–°–õ–£–ì–ò'])
            screen_item.get_current_screen(mass, service_gigacenter, True)
        elif message.text.lower() == '—á–æ–º—É –Ω–∞—Å –æ–±–∏—Ä–∞—é—Ç—å':
            msg = bot.send_message(message.chat.id, dialog['–ß–û–ú–£ –ù–ê–° –û–ë–ò–†–ê–Æ–¢–¨ GIGACENTER'], parse_mode="Markdown")
            bot.register_next_step_handler(msg, about_gigacenter)
        elif message.text.lower() == '–ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –ø–∏—Ç–∞–Ω—å':
            mass = list(menu['–ù–ê–ô–ü–û–ü–£–õ–Ø–†–ù–Ü–®–Ü –ü–ò–¢–ê–ù–ù–Ø'])
            screen_item.get_previous_screen(mass, top_question, True, '–ù–ê–ô–ü–û–ü–£–õ–Ø–†–ù–Ü–®–Ü –ü–ò–¢–ê–ù–ù–Ø')
        elif message.text.lower() == '‚¨ÖÔ∏è–Ω–∞–∑–∞–¥':
            mass = list(menu['–ü–†–û GIGAGROUP'])
            screen_item.get_previous_screen(mass, about_gigagroup, True, '–ü–†–û GIGAGROUP')
        else:
            screen_item.get_error_screen(about_gigacenter)
        print(message.text)
    except Exception:
        print('–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞')
        mass = list(menu.keys())
        screen_item.get_first_screen(mass, first_screen, False, '–û–®–ò–ë–ö–ê')


def service_gigacenter(message):
    screen_item = Screen(bot, message)
    try:
        if message.text.lower() == '–ø–æ-—é–Ω—ñ—Ç–Ω–µ —Ä–æ–∑–º—ñ—â–µ–Ω–Ω—è':
            msg = bot.send_message(message.chat.id, dialog['–ü–û-–Æ–ù–Ü–¢–ù–ï –†–û–ó–ú–Ü–©–ï–ù–ù–Ø'], reply_markup=keyboard_service_order, parse_mode="Markdown")
            bot.register_next_step_handler(msg, service_order, 'GIGACENTER', '–Ü–ù–¢–ï–†–ù–ï–¢ –î–õ–Ø –ë–Ü–ó–ù–ï–°–£')
        elif message.text.lower() == '–æ—Ä–µ–Ω–¥–∞ 1/2 —Å–µ—Ä–≤–µ—Ä–Ω–æ—ó —à–∞—Ñ–∏':
            msg = bot.send_message(message.chat.id, dialog['–û–†–ï–ù–î–ê 1/2 –°–ï–†–í–ï–†–ù–û–á –®–ê–§–ò'], reply_markup=keyboard_service_order, parse_mode="Markdown")
            bot.register_next_step_handler(msg, service_order, 'GIGACENTER', '–Ü–ù–¢–ï–†–ù–ï–¢ –î–õ–Ø –ë–Ü–ó–ù–ï–°–£')
        elif message.text.lower() == '–æ—Ä–µ–Ω–¥–∞ —Å–µ—Ä–≤–µ—Ä–Ω–æ—ó —à–∞—Ñ–∏':
            msg = bot.send_message(message.chat.id, dialog['–û–†–ï–ù–î–ê –°–ï–†–í–ï–†–ù–û–á –®–ê–§–ò'], reply_markup=keyboard_service_order,parse_mode="Markdown")
            bot.register_next_step_handler(msg, service_order, 'GIGACENTER', '–Ü–ù–¢–ï–†–ù–ï–¢ –î–õ–Ø –ë–Ü–ó–ù–ï–°–£')
        elif message.text.lower() == '–æ—Ä–µ–Ω–¥–∞ –º–æ–¥—É–ª—è':
            msg = bot.send_message(message.chat.id, dialog['–û–†–ï–ù–î–ê –ú–û–î–£–õ–Ø'], reply_markup=keyboard_service_order,parse_mode="Markdown")
            bot.register_next_step_handler(msg, service_order, 'GIGACENTER', '–Ü–ù–¢–ï–†–ù–ï–¢ –î–õ–Ø –ë–Ü–ó–ù–ï–°–£')
        elif message.text.lower() == '–æ—Ä–µ–Ω–¥–∞ –µ–∫—Ä–∞–Ω–æ–≤–∞–Ω–æ—ó —à–∞—Ñ–∏':
            msg = bot.send_message(message.chat.id, dialog['–û–†–ï–ù–î–ê –ï–ö–†–ê–ù–û–í–ê–ù–û–á –®–ê–§–ò'], reply_markup=keyboard_service_order,parse_mode="Markdown")
            bot.register_next_step_handler(msg, service_order, 'GIGACENTER', '–Ü–ù–¢–ï–†–ù–ï–¢ –î–õ–Ø –ë–Ü–ó–ù–ï–°–£')
        elif message.text.lower() == '‚¨ÖÔ∏è–Ω–∞–∑–∞–¥':
            mass = list(menu['–ü–†–û GIGAGROUP']['GIGACENTER'])
            screen_item.get_previous_screen(mass, about_gigacenter, True, 'GIGACENTER')
        else:
            screen_item.get_error_screen(service_gigacenter)
    except Exception:
        print('–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞')
        mass = list(menu.keys())
        screen_item.get_first_screen(mass, first_screen, False, '–û–®–ò–ë–ö–ê')


def about_gigacloud(message):
    screen_item = Screen(bot, message)
    try:
        if message.text.lower() == '–ø–æ—Å–ª—É–≥–∏':
            mass = list(menu['–ü–†–û GIGAGROUP']['GIGACLOUD']['–ü–û–°–õ–£–ì–ò'])
            screen_item.get_current_screen(mass, service_gigacloud, True)
        elif message.text.lower() == '—á–æ–º—É –Ω–∞—Å –æ–±–∏—Ä–∞—é—Ç—å':
            msg = bot.send_message(message.chat.id, dialog['–ß–û–ú–£ –ù–ê–° –û–ë–ò–†–ê–Æ–¢–¨ GIGACLOUD'], parse_mode="Markdown")
            bot.register_next_step_handler(msg, about_gigacloud)
        elif message.text.lower() == '–ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –ø–∏—Ç–∞–Ω—å':
            mass = list(menu['–ù–ê–ô–ü–û–ü–£–õ–Ø–†–ù–Ü–®–Ü –ü–ò–¢–ê–ù–ù–Ø'])
            screen_item.get_previous_screen(mass, top_question, True, '–ù–ê–ô–ü–û–ü–£–õ–Ø–†–ù–Ü–®–Ü –ü–ò–¢–ê–ù–ù–Ø')
        elif message.text.lower() == '‚¨ÖÔ∏è–Ω–∞–∑–∞–¥':
            mass = list(menu['–ü–†–û GIGAGROUP'])
            screen_item.get_previous_screen(mass, about_gigagroup, True, '–ü–†–û GIGAGROUP')
        else:
            screen_item.get_error_screen(about_gigacloud)
        print(message.text)
    except Exception:
        print('–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞')
        mass = list(menu.keys())
        screen_item.get_first_screen(mass, first_screen, False, '–û–®–ò–ë–ö–ê')

def service_gigacloud(message):
    screen_item = Screen(bot, message)
    try:
        if message.text.lower() == 'private cloud':
            msg = bot.send_message(message.chat.id, dialog['PRIVATE CLOUD'], reply_markup=keyboard_service_order, parse_mode="Markdown")
            bot.register_next_step_handler(msg, service_order, 'GIGACLOUD', '–Ü–ù–¢–ï–†–ù–ï–¢ –î–õ–Ø –ë–Ü–ó–ù–ï–°–£')
        elif message.text.lower() == 'public cloud':
            msg = bot.send_message(message.chat.id, dialog['PUBLIC CLOUD'], reply_markup=keyboard_service_order,parse_mode="Markdown")
            bot.register_next_step_handler(msg, service_order, 'GIGACLOUD', '–Ü–ù–¢–ï–†–ù–ï–¢ –î–õ–Ø –ë–Ü–ó–ù–ï–°–£')
        elif message.text.lower() == '–∫–ª–∞—Å—Ç–µ—Ä–∏ kubernetes':
            msg = bot.send_message(message.chat.id, dialog['–ö–õ–ê–°–¢–ï–†–ò KUBERNETES'], reply_markup=keyboard_service_order,parse_mode="Markdown")
            bot.register_next_step_handler(msg, service_order, 'GIGACLOUD', '–Ü–ù–¢–ï–†–ù–ï–¢ –î–õ–Ø –ë–Ü–ó–ù–ï–°–£')
        elif message.text.lower() == 'draas':
            msg = bot.send_message(message.chat.id, dialog['DRaaS'], reply_markup=keyboard_service_order,parse_mode="Markdown")
            bot.register_next_step_handler(msg, service_order, 'GIGACLOUD', '–Ü–ù–¢–ï–†–ù–ï–¢ –î–õ–Ø –ë–Ü–ó–ù–ï–°–£')
        elif message.text.lower() == 'baas':
            msg = bot.send_message(message.chat.id, dialog['BaaS'], reply_markup=keyboard_service_order,parse_mode="Markdown")
            bot.register_next_step_handler(msg, service_order, 'GIGACLOUD', '–Ü–ù–¢–ï–†–ù–ï–¢ –î–õ–Ø –ë–Ü–ó–ù–ï–°–£')
        elif message.text.lower() == '‚¨ÖÔ∏è–Ω–∞–∑–∞–¥':
            mass = list(menu['–ü–†–û GIGAGROUP']['GIGACLOUD'])
            screen_item.get_previous_screen(mass, about_gigacloud, True, 'GIGACLOUD')
        else:
            screen_item.get_error_screen(service_gigacloud)
    except Exception:
        print('–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞')
        mass = list(menu.keys())
        screen_item.get_first_screen(mass, first_screen, False, '–û–®–ò–ë–ö–ê')

def about_gigasafe(message):
    screen_item = Screen(bot, message)

    try:
        if message.text.lower() == '–ø–æ—Å–ª—É–≥–∏':
            mass = list(menu['–ü–†–û GIGAGROUP']['GIGASAFE']['–ü–û–°–õ–£–ì–ò'])
            screen_item.get_current_screen(mass, service_gigasafe, True)
        elif message.text.lower() == '—á–æ–º—É –Ω–∞—Å –æ–±–∏—Ä–∞—é—Ç—å':
            msg = bot.send_message(message.chat.id, dialog['–ß–û–ú–£ –ù–ê–° –û–ë–ò–†–ê–Æ–¢–¨ GIGASAFE'], parse_mode="Markdown")
            bot.register_next_step_handler(msg, about_gigasafe)
        elif message.text.lower() == '–ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –ø–∏—Ç–∞–Ω—å':
            mass = list(menu['–ù–ê–ô–ü–û–ü–£–õ–Ø–†–ù–Ü–®–Ü –ü–ò–¢–ê–ù–ù–Ø'])
            screen_item.get_previous_screen(mass, top_question, True, '–ù–ê–ô–ü–û–ü–£–õ–Ø–†–ù–Ü–®–Ü –ü–ò–¢–ê–ù–ù–Ø')
        elif message.text.lower() == '‚¨ÖÔ∏è–Ω–∞–∑–∞–¥':
            mass = list(menu['–ü–†–û GIGAGROUP'])
            screen_item.get_previous_screen(mass, about_gigagroup, True, '–ü–†–û GIGAGROUP')
        else:
            screen_item.get_error_screen(about_gigasafe)
        print(message.text)
    except Exception:
        print('–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞')
        mass = list(menu.keys())
        screen_item.get_first_screen(mass, first_screen, False, '–û–®–ò–ë–ö–ê')

def service_gigasafe(message):
    screen_item = Screen(bot, message)
    try:
        if message.text.lower() == '—ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—è –∑–∞–≥—Ä–æ–∑':
            msg = bot.send_message(message.chat.id, dialog['–Ü–î–ï–ù–¢–ò–§–Ü–ö–ê–¶–Ü–Ø –ó–ê–ì–†–û–ó'], reply_markup=keyboard_service_order, parse_mode="Markdown")
            bot.register_next_step_handler(msg, service_order, 'GIGASAFE', '–Ü–ù–¢–ï–†–ù–ï–¢ –î–õ–Ø –ë–Ü–ó–ù–ï–°–£')
        elif message.text.lower() == '–Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–∞—Ö–∏—Å—Ç—É':
            msg = bot.send_message(message.chat.id, dialog['–ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø –ó–ê–•–ò–°–¢–£'], reply_markup=keyboard_service_order, parse_mode="Markdown")
            bot.register_next_step_handler(msg, service_order, 'GIGASAFE', '–Ü–ù–¢–ï–†–ù–ï–¢ –î–õ–Ø –ë–Ü–ó–ù–ï–°–£')
        elif message.text.lower() == '–º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –∞–Ω–æ–º–∞–ª—ñ–π':
            msg = bot.send_message(message.chat.id, dialog['–ú–û–ù–Ü–¢–û–†–ò–ù–ì –ê–ù–û–ú–ê–õ–Ü–ô'], reply_markup=keyboard_service_order,parse_mode="Markdown")
            bot.register_next_step_handler(msg, service_order, 'GIGASAFE', '–Ü–ù–¢–ï–†–ù–ï–¢ –î–õ–Ø –ë–Ü–ó–ù–ï–°–£')
        elif message.text.lower() == '—Ä–µ–∞–≥—É–≤–∞–Ω–Ω—è –Ω–∞ —ñ–Ω—Ü–∏–¥–µ–Ω—Ç–∏':
            msg = bot.send_message(message.chat.id, dialog['–†–ï–ê–ì–£–í–ê–ù–ù–Ø –ù–ê –Ü–ù–¶–ò–î–ï–ù–¢–ò'], reply_markup=keyboard_service_order,parse_mode="Markdown")
            bot.register_next_step_handler(msg, service_order, 'GIGASAFE', '–Ü–ù–¢–ï–†–ù–ï–¢ –î–õ–Ø –ë–Ü–ó–ù–ï–°–£')
        elif message.text.lower() == '–≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–∞ –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è':
            msg = bot.send_message(message.chat.id, dialog['–í–Ü–î–ù–û–í–õ–ï–ù–ù–Ø –ù–ê –ü–û–ö–†–ê–©–ï–ù–ù–Ø'], reply_markup=keyboard_service_order,parse_mode="Markdown")
            bot.register_next_step_handler(msg, service_order, 'GIGASAFE', '–Ü–ù–¢–ï–†–ù–ï–¢ –î–õ–Ø –ë–Ü–ó–ù–ï–°–£')
        elif message.text.lower() == '‚¨ÖÔ∏è–Ω–∞–∑–∞–¥':
            mass = list(menu['–ü–†–û GIGAGROUP']['GIGASAFE'])
            screen_item.get_previous_screen(mass, about_gigasafe, True, 'GIGASAFE')
        else:
            screen_item.get_error_screen(service_gigasafe)
    except Exception:
        print('–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞')
        mass = list(menu.keys())
        screen_item.get_first_screen(mass, first_screen, False, '–û–®–ò–ë–ö–ê')

def service_order(message, company, service):
    print(company)
    screen_item = Screen(bot, message)
    try:
        if company == 'GIGATRANS':
            if message.text.lower() == '–∑–∞–º–æ–≤–∏—Ç–∏ –ø–æ—Å–ª—É–≥—É':
                mass = list(menu['–ü–†–û GIGAGROUP'])
                screen_item.get_previous_screen(mass, about_gigagroup, True, '–ü–†–û GIGAGROUP')
            else:
                mass = list(menu['–ü–†–û GIGAGROUP']['GIGATRANS']['–ü–û–°–õ–£–ì–ò'])
                screen_item.get_previous_screen(mass, service_gigatrans, True, '–ü–û–°–õ–£–ì–ò')
        elif company == 'GIGACENTER':
            if message.text.lower() == '–∑–∞–º–æ–≤–∏—Ç–∏ –ø–æ—Å–ª—É–≥—É':
                mass = list(menu['–ü–†–û GIGAGROUP'])
                screen_item.get_previous_screen(mass, about_gigagroup, True, '–ü–†–û GIGAGROUP')
            else:
                mass = list(menu['–ü–†–û GIGAGROUP']['GIGACENTER']['–ü–û–°–õ–£–ì–ò'])
                screen_item.get_previous_screen(mass, service_gigacenter, True, '–ü–û–°–õ–£–ì–ò GIGACENTER')
        elif company == 'GIGACLOUD':
            if message.text.lower() == '–∑–∞–º–æ–≤–∏—Ç–∏ –ø–æ—Å–ª—É–≥—É':
                mass = list(menu['–ü–†–û GIGAGROUP'])
                screen_item.get_previous_screen(mass, about_gigagroup, True, '–ü–†–û GIGAGROUP')
            else:
                mass = list(menu['–ü–†–û GIGAGROUP']['GIGACLOUD']['–ü–û–°–õ–£–ì–ò'])
                screen_item.get_previous_screen(mass, service_gigacloud, True, '–ü–û–°–õ–£–ì–ò')
        elif company == 'GIGASAFE':
            if message.text.lower() == '–∑–∞–º–æ–≤–∏—Ç–∏ –ø–æ—Å–ª—É–≥—É':
                mass = list(menu['–ü–†–û GIGAGROUP'])
                screen_item.get_previous_screen(mass, about_gigagroup, True, '–ü–†–û GIGAGROUP')
            else:
                mass = list(menu['–ü–†–û GIGAGROUP']['GIGASAFE']['–ü–û–°–õ–£–ì–ò'])
                screen_item.get_previous_screen(mass, service_gigasafe, True, '–ü–û–°–õ–£–ì–ò')
    except Exception:
        print('–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞')
        mass = list(menu.keys())
        screen_item.get_first_screen(mass, first_screen, False, '–û–®–ò–ë–ö–ê')

def top_service(message):
    screen_item = Screen(bot, message)
    try:
        if message.text.lower() == '—ñ–Ω—Ç–µ—Ä–Ω–µ—Ç –¥–ª—è –±—ñ–∑–Ω–µ—Å—É':
            msg = bot.send_message(message.chat.id, dialog['–Ü–ù–¢–ï–†–ù–ï–¢ –î–õ–Ø –ë–Ü–ó–ù–ï–°–£'], reply_markup=keyboard_service_order,parse_mode="Markdown")
            bot.register_next_step_handler(msg, service_top_order, 'GIGATRANS', '–Ü–ù–¢–ï–†–ù–ï–¢ –î–õ–Ø –ë–Ü–ó–ù–ï–°–£')
        elif message.text.lower() == '–æ—Ä–µ–Ω–¥–∞ –µ–∫—Ä–∞–Ω–æ–≤–∞–Ω–æ—ó —à–∞—Ñ–∏':
            msg = bot.send_message(message.chat.id, dialog['–û–†–ï–ù–î–ê –ï–ö–†–ê–ù–û–í–ê–ù–û–á –®–ê–§–ò'], reply_markup=keyboard_service_order,parse_mode="Markdown")
            bot.register_next_step_handler(msg, service_top_order, 'GIGACENTER', '–û–†–ï–ù–î–ê –ï–ö–†–ê–ù–û–í–ê–ù–û–á –®–ê–§–ò')
        elif message.text.lower() == 'private cloud':
            msg = bot.send_message(message.chat.id, dialog['PRIVATE CLOUD'], reply_markup=keyboard_service_order, parse_mode="Markdown")
            bot.register_next_step_handler(msg, service_top_order, 'GIGACLOUD', 'PRIVATE CLOUD')
        elif message.text.lower() == '–≥—ñ–±—Ä–∏–¥–Ω—ñ —Ä—ñ—à–µ–Ω–Ω—è':
            msg = bot.send_message(message.chat.id, dialog['–ì–Ü–ë–†–ò–î–ù–Ü –†–Ü–®–ï–ù–ù–Ø'], reply_markup=keyboard_service_order,parse_mode="Markdown")
            bot.register_next_step_handler(msg, service_top_order, 'GIGACLOUD', '–ì–Ü–ë–†–ò–î–ù–Ü –†–Ü–®–ï–ù–ù–Ø')
        elif message.text.lower() == '—ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—è –∑–∞–≥—Ä–æ–∑':
            msg = bot.send_message(message.chat.id, dialog['–Ü–î–ï–ù–¢–ò–§–Ü–ö–ê–¶–Ü–Ø –ó–ê–ì–†–û–ó'], reply_markup=keyboard_service_order, parse_mode="Markdown")
            bot.register_next_step_handler(msg, service_top_order, 'GIGASAFE', '–Ü–î–ï–ù–¢–ò–§–Ü–ö–ê–¶–Ü–Ø –ó–ê–ì–†–û–ó')
        elif message.text.lower() == '–±—É–¥—ñ–≤–Ω–∏—Ü—Ç–≤–æ –≤–æ–ª–∑':
            msg = bot.send_message(message.chat.id, dialog['–ë–£–î–Ü–í–ù–ò–¶–¢–í–û –í–û–õ–ó'], reply_markup=keyboard_service_order,parse_mode="Markdown")
            bot.register_next_step_handler(msg, service_top_order, 'GIGATRANS', '–ë–£–î–Ü–í–ù–ò–¶–¢–í–û –í–û–õ–ó')
        elif message.text.lower() == '–ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –ø–∏—Ç–∞–Ω—å':
            mass = list(menu['–ù–ê–ô–ü–û–ü–£–õ–Ø–†–ù–Ü–®–Ü –ü–ò–¢–ê–ù–ù–Ø'])
            screen_item.get_previous_screen(mass, top_question, True, '–ù–ê–ô–ü–û–ü–£–õ–Ø–†–ù–Ü–®–Ü –ü–ò–¢–ê–ù–ù–Ø')
        elif message.text.lower() == '‚¨ÖÔ∏è–Ω–∞–∑–∞–¥':
            mass = list(menu.keys())
            screen_item.get_previous_screen(mass, first_screen, False, '–ü–æ—á–∞—Ç–∏')
        else:
            screen_item.get_error_screen(top_service)
    except Exception:
        print('–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞')
        mass = list(menu.keys())
        screen_item.get_first_screen(mass, first_screen, False, '–û–®–ò–ë–ö–ê')


def service_top_order(message, company, service):
    print(company)
    screen_item = Screen(bot, message)
    try:
        if message.text.lower() == '–∑–∞–º–æ–≤–∏—Ç–∏ –ø–æ—Å–ª—É–≥—É':
            if service == '–Ü–ù–¢–ï–†–ù–ï–¢ –î–õ–Ø –ë–Ü–ó–ù–ï–°–£':
                mass = list(menu['–¢–û–ü-–ü–û–°–õ–£–ì–ò üèÜ'])
                screen_item.get_previous_screen(mass, top_service, True, '–¢–û–ü-–ü–û–°–õ–£–ì–ò üèÜ')
            elif service == '–û–†–ï–ù–î–ê –ï–ö–†–ê–ù–û–í–ê–ù–û–á –®–ê–§–ò':
                mass = list(menu['–¢–û–ü-–ü–û–°–õ–£–ì–ò üèÜ'])
                screen_item.get_previous_screen(mass, top_service, True, '–¢–û–ü-–ü–û–°–õ–£–ì–ò üèÜ')
            elif service == 'PRIVATE CLOUD':
                mass = list(menu['–¢–û–ü-–ü–û–°–õ–£–ì–ò üèÜ'])
                screen_item.get_previous_screen(mass, top_service, True, '–¢–û–ü-–ü–û–°–õ–£–ì–ò üèÜ')
            elif service == '–ì–Ü–ë–†–ò–î–ù–Ü –†–Ü–®–ï–ù–ù–Ø':
                mass = list(menu['–¢–û–ü-–ü–û–°–õ–£–ì–ò üèÜ'])
                screen_item.get_previous_screen(mass, top_service, True, '–¢–û–ü-–ü–û–°–õ–£–ì–ò üèÜ')
            elif service == '–Ü–î–ï–ù–¢–ò–§–Ü–ö–ê–¶–Ü–Ø –ó–ê–ì–†–û–ó':
                mass = list(menu['–¢–û–ü-–ü–û–°–õ–£–ì–ò üèÜ'])
                screen_item.get_previous_screen(mass, top_service, True, '–¢–û–ü-–ü–û–°–õ–£–ì–ò üèÜ')
            elif service == '–ë–£–î–Ü–í–ù–ò–¶–¢–í–û –í–û–õ–ó':
                mass = list(menu['–¢–û–ü-–ü–û–°–õ–£–ì–ò üèÜ'])
                screen_item.get_previous_screen(mass, top_service, True, '–¢–û–ü-–ü–û–°–õ–£–ì–ò üèÜ')
        elif message.text.lower() == '‚¨ÖÔ∏è–Ω–∞–∑–∞–¥':
            mass = list(menu['–¢–û–ü-–ü–û–°–õ–£–ì–ò üèÜ'])
            screen_item.get_previous_screen(mass, top_service, True, '–¢–û–ü-–ü–û–°–õ–£–ì–ò üèÜ')
        else:
            screen_item.get_error_screen(service_top_order)
    except Exception:
        print('–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞')
        mass = list(menu.keys())
        screen_item.get_first_screen(mass, first_screen, False, '–û–®–ò–ë–ö–ê')

def add_manager(message):
    print(message)
    screen_item = Screen(bot, message)
    try:
        if (message.contact):
            print(1)
            db_users.add_message_from_contact(message)
            mass = list(menu.keys())
            screen_item.get_previous_screen(mass, first_screen, False, '–ó–ê–Ø–í–ê –ú–ï–ù–ï–î–ñ–ï–†–£')
        else:
            if message.text.lower() != '‚¨ÖÔ∏è–Ω–∞–∑–∞–¥':
                db_users.add_message(message)
                mass = list(menu.keys())
                screen_item.get_previous_screen(mass, first_screen, False, '–ó–ê–Ø–í–ê –ú–ï–ù–ï–î–ñ–ï–†–£')
            else:
                mass = list(menu.keys())
                screen_item.get_previous_screen(mass, first_screen, False, '–ü–æ—á–∞—Ç–∏')
    except Exception:
        print('–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞')
        mass = list(menu.keys())
        screen_item.get_first_screen(mass, first_screen, False, '–û–®–ò–ë–ö–ê')


def top_question(message):
    screen_item = Screen(bot, message)
    try:
        if message.text.lower() == 'gigatrans':
            mass = list(inline_menu['GIGATRANS'])
            screen_item.get_popular_question_screen(mass, 'gigatrans', top_question)
        elif message.text.lower() == 'gigacenter':
            mass = list(inline_menu['GIGACENTER'])
            screen_item.get_popular_question_screen(mass, 'gigacenter', top_question)
        elif message.text.lower() == 'gigacloud':
            mass = list(inline_menu['GIGACLOUD'])
            screen_item.get_popular_question_screen(mass, 'gigacloud', top_question)
        elif message.text.lower() == 'gigasafe':
            mass = list(inline_menu['GIGASAFE'])
            screen_item.get_popular_question_screen(mass, 'gigasafe', top_question)
        elif message.text.lower() == '–ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –ø–∏—Ç–∞–Ω—å':
            mass = list(menu['–ù–ê–ô–ü–û–ü–£–õ–Ø–†–ù–Ü–®–Ü –ü–ò–¢–ê–ù–ù–Ø'])
            screen_item.get_previous_screen(mass, top_question, True, '–ù–ê–ô–ü–û–ü–£–õ–Ø–†–ù–Ü–®–Ü –ü–ò–¢–ê–ù–ù–Ø')
        elif message.text.lower() == '‚¨ÖÔ∏è–Ω–∞–∑–∞–¥':
            mass = list(menu.keys())
            screen_item.get_previous_screen(mass, first_screen, False, '–ü–æ—á–∞—Ç–∏')
        else:
            screen_item.get_error_screen(about_gigagroup)
    except Exception:
        print('–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞')
        mass = list(menu.keys())
        screen_item.get_first_screen(mass, first_screen, False, '–û–®–ò–ë–ö–ê')

    print(message.text)

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    screen_item = Screen(bot, call.message)
    print(call.message)
    # GIGATRANS QUESTION
    try:
        if call.data == "gigatrans1":
            screen_item.get_popular_question_edit_screen('–Ø–ö–Ü –î–Ü–Æ–¢–¨ –¢–ê–†–ò–§–ò –ù–ê –ü–Ü–î–ö–õ–Æ–ß–ï–ù–ù–Ø –Ü–ù–¢–ï–†–ù–ï–¢–£?', False)
        elif call.data == "gigatrans2":
            screen_item.get_popular_question_edit_screen('–ß–ò –ú–û–ñ–ï–¢–ï –í–ò –í–ò–ö–û–ù–ê–¢–ò –ú–Ü–ñ–ù–ê–†–û–î–ù–ï –ü–Ü–î–ö–õ–Æ–ß–ï–ù–ù–Ø?', False)
        elif call.data == "gigatrans3":
            screen_item.get_popular_question_edit_screen('–Ø–ö–Ü –¢–ï–†–ú–Ü–ù–ò –ü–Ü–î–ö–õ–Æ–ß–ï–ù–ù–Ø –Ü–ù–¢–ï–†–ù–ï–¢–£?', False)
        elif call.data == "gigatrans4":
            screen_item.get_popular_question_edit_screen('–ß–ò –ì–ê–†–ê–ù–¢–£–Ñ–¢–ï –í–ò –®–í–ò–î–ö–Ü–°–¢–¨ –Ü–ù–¢–ï–†–ù–ï–¢–£ 100 –ì–ë–Ü–¢/–°?', False)
        elif call.data == "gigatrans5":
            screen_item.get_popular_question_edit_screen('–Ø–ö–£ –Ø –û–¢–†–ò–ú–ê–Æ –Ü–†-–ê–î–†–ï–°–£, –°–¢–ê–¢–ò–ß–ù–£ –ß–ò –î–ò–ù–ê–ú–Ü–ß–ù–£?', False)
        elif call.data == "gigatrans6":
            screen_item.get_popular_question_edit_screen('–Ø–ö–Ü –õ–Ü–ù–Ü–á –ó–í\'–Ø–ó–ö–£ –í–ò –í–ò–ö–û–†–ò–°–¢–û–í–£–Ñ–¢–ï –î–õ–Ø –ü–Ü–î–ö–õ–Æ–ß–ï–ù–ù–Ø?', False)
        elif call.data == "gigatrans7":
            screen_item.get_popular_question_edit_screen('–ß–ò –Ñ –£ –í–ê–° –°–ï–†–¢–ò–§–Ü–ö–ê–¢ –ë–ï–ó–ü–ï–ö–ò –ö–°–ó–Ü?', False)
        elif call.data == "gigatrans8":
            screen_item.get_popular_question_edit_screen('–ß–ò –Ñ –£ –í–ê–° –°–ï–†–¢–ò–§–Ü–ö–ê–¢ ISO?', False)

        # GIGACENTER QUESTION

        elif call.data == "gigacenter1":
            screen_item.get_popular_question_edit_screen('–Ø–ö–Ü –¢–ê–†–ò–§–ò –ù–ê –ö–ê–õ–û–ö–ï–ô–®–ù?', False)
        elif call.data == "gigacenter2":
            screen_item.get_popular_question_edit_screen('–Ø–ö–ò–ô –†–Ü–í–ï–ù–¨ –í–Ü–î–ú–û–í–û–°–¢–Ü–ô–ö–û–°–¢–Ü –û–ë–õ–ê–î–ù–ê–ù–ù–Ø?', False)
        elif call.data == "gigacenter3":
            screen_item.get_popular_question_edit_screen('–ß–ò –Ñ –£ –í–ê–° –†–ï–ó–ï–†–í–£–í–ê–ù–ù–Ø –Ü–ù–§–†–ê–°–¢–†–£–ö–¢–£–†–ò?', False)
        elif call.data == "gigacenter4":
            screen_item.get_popular_question_edit_screen('–ß–ò –Ñ –£ –í–ê–° –°–ï–†–¢–ò–§–Ü–ö–ê–¢–ò –Ø–ö–û–°–¢–Ü ISO?', False)
        elif call.data == "gigacenter5":
            screen_item.get_popular_question_edit_screen('–ß–ò –Ñ –£ –í–ê–° –ü–û–°–õ–£–ì–ê SMART HANDS?', False)
        elif call.data == "gigacenter6":
            screen_item.get_popular_question_edit_screen('–ß–ò –ú–û–ñ–£ –Ø –í–Ü–î–í–Ü–î–ê–¢–ò –î–ê–¢–ê-–¶–ï–ù–¢–†?', False)
        elif call.data == "gigacenter7":
            screen_item.get_popular_question_edit_screen('–ß–ò –í–Ü–î–ü–û–í–Ü–î–ê–Ñ–¢–ï –í–ò –°–¢–ê–ù–î–ê–†–¢–£ –ù–ë–£?', False)

            # GIGACLOUD QUESTION

        elif call.data == "gigacloud1":
            screen_item.get_popular_question_edit_screen('–ù–ê –ß–û–ú–£ –ü–û–ë–£–î–û–í–ê–ù–ê –Ü–ù–§–†–ê–°–¢–†–£–ö–¢–£–†–ê –•–ú–ê–†–ò?', False)
        elif call.data == "gigacloud2":
            screen_item.get_popular_question_edit_screen('–î–ï –†–û–ó–ú–Ü–©–ï–ù–ê –Ü–ù–§–†–ê–°–¢–†–£–ö–¢–£–†–ê GIGACLOUD?', False)
        elif call.data == "gigacloud3":
            screen_item.get_popular_question_edit_screen('–ß–ò –Ñ –£ –í–ê–° –°–ï–†–¢–ò–§–Ü–ö–ê–¢–ò –ö–°–ó–Ü –¢–ê ISO?', False)
        elif call.data == "gigacloud4":
            screen_item.get_popular_question_edit_screen('–ß–ò –ú–û–ñ–£ –Ø –°–ê–ú–û–°–¢–Ü–ô–ù–û –£–ü–†–ê–í–õ–Ø–¢–ò –ü–†–ê–í–ê–ú–ò –î–û–°–¢–£–ü–£ –î–û –í–Ü–†–¢–£–ê–õ–¨–ù–ò–• –°–ï–†–í–ï–†–Ü–í?', False)
        elif call.data == "gigacloud5":
            screen_item.get_popular_question_edit_screen('–ß–ò –î–û–ü–û–ú–ê–ì–ê–Ñ–¢–ï –í–ò –ó –ü–ï–†–ï–ù–ï–°–ï–ù–ù–Ø–ú –°–ï–†–í–Ü–°–Ü–í –î–û –•–ú–ê–†–ò?', False)
        elif call.data == "gigacloud6":
            screen_item.get_popular_question_edit_screen('–ß–ò –ù–ê–î–ê–Ñ–¢–ï –í–ò –¢–ï–°–¢–û–í–ò–ô –ü–ï–†–Ü–û–î?', False)
        elif call.data == "gigacloud7":
            screen_item.get_popular_question_edit_screen('–ß–ò –Ñ –£ –í–ê–° –†–ï–ó–ï–†–í–£–í–ê–ù–ù–Ø –Ü–ù–§–†–ê–°–¢–†–£–ö–¢–£–†–ò?GIGACLOUD', False)

        # GIGASAFE QUESTION

        elif call.data == "gigasafe1":
            screen_item.get_popular_question_edit_screen('–Ø–ö–ò–ú–ò –î–û–°–í–Ü–î–û–ú –í–û–õ–û–î–Ü–Ñ –ö–û–ú–ê–ù–î–ê?', False)
        elif call.data == "gigasafe2":
            screen_item.get_popular_question_edit_screen('–Ø–ö–Ü –°–ï–†–¢–ò–§–Ü–ö–ê–¢–ò –ú–ê–Æ–¢–¨ –°–ü–ï–¶–Ü–ê–õ–Ü–°–¢–ò GIGASAFE?', False)
        elif call.data == "gigasafe3":
            screen_item.get_popular_question_edit_screen('–Ø–ö –ü–ï–†–ï–í–Ü–†–ò–¢–ò –ß–ò –Ñ –ö–Ü–ë–ï–†–ó–ê–ì–†–û–ó–ò –î–õ–Ø –ú–û–ì–û –ë–Ü–ó–ù–ï–°–£?', False)
        elif call.data == "gigasafe4":
            screen_item.get_popular_question_edit_screen('–Ø–ö GIGASAFE –ó–ê–ë–ï–ó–ü–ï–ß–£–Ñ –ë–ï–ó–ü–ï–ö–£ –î–ê–ù–ò–• –ó–ê–ú–û–í–ù–ò–ö–ê?', False)
        elif call.data == "gigasafe5":
            screen_item.get_popular_question_edit_screen('–Ø–ö –ë–Ü–ó–ù–ï–° –ú–û–ñ–ï –ó–ê–•–ò–°–¢–ò–¢–ò–°–Ø –í–Ü–î –ó–ê–ì–†–û–ó –ü–†–ò –í–Ü–î–î–ê–õ–ï–ù–Ü–ô –†–û–ë–û–¢–Ü?', False)
        elif call.data == "gigasafe6":
            screen_item.get_popular_question_edit_screen('–Ø–ö–ê –í–ê–†–¢–Ü–°–¢–¨ –í–ê–®–ò–• –ü–û–°–õ–£–ì?', False)
        else:
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text=dialog['–û–®–ò–ë–ö–ê –í–û–ü–†–û–°–ê'])
            mass = list(menu['–ù–ê–ô–ü–û–ü–£–õ–Ø–†–ù–Ü–®–Ü –ü–ò–¢–ê–ù–ù–Ø'])
            screen_item.get_previous_screen(mass, top_question, True, '–ü–æ—á–∞—Ç–∏')
    except Exception:
        print('–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞')
        mass = list(menu.keys())
        screen_item.get_first_screen(mass, first_screen, False, '–û–®–ò–ë–ö–ê')

bot.polling()